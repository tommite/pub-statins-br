\documentclass[a4paper]{article}

\begin{document}

\section{Measurements}

<<setup,echo=FALSE>>=
options(digits=3)

outcomes <- c(
	'mortality', 'coronary', 'cerebrovasc',
	'discontinuation', 'myalgia', 'transaminase', 'ck-elevation'
	)

treatments <- c('control', 'atorva', 'fluva', 'lova', 'prava', 'rosuva', 'simva')

N <- 1E4

library(mnormt)

ilogit <- function(x) { exp(x) / (1 + exp(x)) }

gen.meas <- function(desc) {
	meas <- ilogit(cbind(0, rmnorm(N, desc$rel$mean, desc$rel$cov)) + desc$base)
	colnames(meas) <- treatments
	meas
}

meas <- lapply(outcomes, function(outcome) { gen.meas(dget(paste(outcome, 'meas.txt', sep='.'))) })
names(meas) <- outcomes

calc.quantiles <- function(meas) {
	lapply(meas, function(x) {
		apply(x, 2, function(y) {
			quantile(y, probs=c(0.025, 0.5, 0.975))
		})
	})
}
@

\subsection{Absolute risk}

Measurement distributions of the absolute risk of events based on the assumed absolute risk for placebo and log-odds ratios derived from an MTC:

<<riskQuantiles,echo=FALSE>>=
quants <- calc.quantiles(meas)
@

<<plotQuantiles,echo=FALSE>>=
library(gemtc)
plotQuantiles <- function(outcome) {
	data <- data.frame(
		id=colnames(quants[[outcome]]), pe=quants[[outcome]]['50%',], ci.l=quants[[outcome]]['2.5%',], ci.u=quants[[outcome]]['97.5%',], style='normal')
	blobbogram(data, xlim=c(0, 0.25), id.label="Treatment", ci.label="Risk (95% CI)", right.label=outcome)
}
@

<<mortalityPlot,echo=FALSE,fig=TRUE>>=
plotQuantiles('mortality')
@

<<coronaryPlot,echo=FALSE,fig=TRUE>>=
plotQuantiles('coronary')
@

<<cerebrovascPlot,echo=FALSE,fig=TRUE>>=
plotQuantiles('cerebrovasc')
@

<<discontinuationPlot,echo=FALSE,fig=TRUE>>=
plotQuantiles('discontinuation')
@

<<myalgiaPlot,echo=FALSE,fig=TRUE>>=
plotQuantiles('myalgia')
@

<<transaminasePlot,echo=FALSE,fig=TRUE>>=
plotQuantiles('transaminase')
@

<<ck-elevationPlot,echo=FALSE,fig=TRUE>>=
plotQuantiles('ck-elevation')
@


\subsection{Partial values}

Partial value functions derived from the absolute risk (all criteria scaled from 25\% incidence as worst (value $= 0$) to 0\% incidence as best (value $= 1$):

<<partialValues,echo=FALSE>>=
part.values <- lapply(meas, function(x) { (0.25 - x) / 0.25 })
calc.quantiles(part.values)
part.values <- array(unlist(part.values), dim=c(N, length(treatments), length(outcomes)), dimnames=list(1:N, treatments, outcomes))
@

\section{Analysis}

I first reproduce your analysis with arbitrarily fixed weights based on the partial value functions defined above.
Then I proceed to some more "advanced" (but also more informative) SMAA type analyses.

<<loadSMAA,echo=FALSE>>=
library(hitandrun)
library(smaa)
@

\subsection{Arbitrarily weighted}

The criteria are weighted as follows: mortality, coronary events, cerebrovascular events $1/6$ and all remaining criteria $1/8$.
This results in the following rank acceptabilities:

<<arbitrary,echo=FALSE, fig=TRUE>>=
w <- c(1/6, 1/6, 1/6, 1/8, 1/8, 1/8, 1/8)
result <- smaa(part.values, matrix(w, ncol=length(w), nrow=N, byrow=TRUE))
plot(result$ra)
@

Based on this weighting, simvastatin and pravastatin appear to be most likely to be preferred.
Fluvastatin and lovastatin have significantly non-zero probabilities for both the worst and best ranks (i.e. have a very high uncertainty).
Unfortunately, these results tell us nothing about the sensitivity of these results to the weights.

\subsection{Preference free}

A preference free analysis does not fix the weights at any specific value, but rather allows them to take any reasonable value.
Thus, it produces rank acceptabilities `averaged' over all possible weightings.
Because the previous analysis had weights very close to equal, we would expect this analysis to have results similar to the previous one, but with more uncertainty (because sensitivity to the weighting is taken into account).

<<nopref,echo=FALSE, fig=TRUE>>=
w <- simplex.sample(length(outcomes), N)$samples
result <- smaa(part.values, w)
plot(result$ra)
@

Because we look at all possible weights, we can also show which weights would `typically' favor a certain alternative: the central weights.


<<cw,echo=FALSE,fig=TRUE>>=
plot(NA, xlim=c(1, length(outcomes)), ylim=c(0, 0.4), xlab="Criterion", ylab="Weight", xaxt='n')
axis(side=1, at=1:7, labels=outcomes, las=2)
result$cw
cf <- sapply(treatments, function(trt) {
	w <- result$cw[trt, ]
	ra <- smaa(part.values, matrix(w, ncol=length(w), nrow=N, byrow=TRUE))$ra
	unname(ra[trt, 1])
})

for (i in 1:length(treatments)) {
	if (cf[i] > 0.10) {
		lines(result$cw[i,], type='o', pch=i)
	}
	legend("topright", legend=treatments[cf > 0.10], pch=(1:length(treatments))[cf > 0.10])
}
@

In the above plot, I only show central weights that have a confidence factor above $0.10$, so as to show the most interesting ones. These are all the confidence factors:

<<cf,echo=FALSE>>=
cf
@

To me, some of these `typical' weightings that would support each alternative are rather unrealistic. For example, I would be surprised if anyone would think that discontinuation due to adverse events is more important than mortality.

\subsection{Ordinal preferences}

In this analysis, I incorporated some straightforward qualitative preference information:
\begin{itemize}
\item Preventing mortality is more important than either coronary or cerebrovascular events (individually)
\item Preventing coronary events is more important than any of the adverse events (individually)
\item Preventing cerebrovascular events is more important than any of the adverse events (individually)
\end{itemize}
No statements are made regarding the relative importance of coronary versus cerebrovascular events, nor regarding the relative importance of the adverse events.

<<ordinal,echo=FALSE,fig=TRUE>>=
n <- length(outcomes)
idx <- function(o) { which(outcomes==o) }

constr <- mergeConstraints(
	ordinalConstraint(n, idx('mortality'), idx('coronary')),
	ordinalConstraint(n, idx('mortality'), idx('cerebrovasc')),

	ordinalConstraint(n, idx('coronary'), idx('discontinuation')),
	ordinalConstraint(n, idx('coronary'), idx('myalgia')),
	ordinalConstraint(n, idx('coronary'), idx('transaminase')),
	ordinalConstraint(n, idx('coronary'), idx('ck-elevation')),

	ordinalConstraint(n, idx('cerebrovasc'), idx('discontinuation')),
	ordinalConstraint(n, idx('cerebrovasc'), idx('myalgia')),
	ordinalConstraint(n, idx('cerebrovasc'), idx('transaminase')),
	ordinalConstraint(n, idx('cerebrovasc'), idx('ck-elevation'))
)
transform <- simplex.createTransform(n)
constr <- simplex.createConstraints(transform, constr)
seedPoint <- createSeedPoint(constr, homogeneous=TRUE)
N <- 10000
w <- har(seedPoint, constr, N=N * (n-1)^3, thin=(n-1)^3, homogeneous=TRUE, transform=transform)$samples

result <- smaa(part.values, w)

plot(result$ra)
@

<<cwOrdinal,fig=TRUE, echo=FALSE>>=
plot(NA, xlim=c(1, length(outcomes)), ylim=c(0, 0.4), xlab="Criterion", ylab="Weight", xaxt='n')
axis(side=1, at=1:7, labels=outcomes, las=2)
result$cw
cf <- sapply(treatments, function(trt) {
	w <- result$cw[trt, ]
	message(w)
	if (!any(is.na(w))) {
		ra <- smaa(part.values, matrix(w, ncol=length(w), nrow=N, byrow=TRUE))$ra
		unname(ra[trt, 1])
	} else {
		0.0
	}
})
cf

for (i in 1:length(treatments)) {
	if (cf[i] > 0.10) {
		lines(result$cw[i,], type='o', pch=i)
	}
	legend("topright", legend=treatments[cf > 0.10], pch=(1:length(treatments))[cf > 0.10])
}
@

\subsubsection{Benefit and harm scores}

I tried to make "something like Figure 4", based on the utility estimated by SMAA.
My main conclusion from the plot would be that control, lovastatin and rosuvastatin appear to be (stochastically) dominated by the others.

% And now for the crazy part
<<bla,echo=FALSE>>=
scores <- lapply(treatments, function(trt) { t(part.values[,trt,]) * w[i,] })
benefit <- lapply(scores, function(x) { c(1, 1, 1, 0, 0, 0, 0) %*% x })
names(benefit) <- treatments
harm <- lapply(scores, function(x) { c(0, 0, 0, 1, 1, 1, 1) %*% x })
names(harm) <- treatments
sapply(benefit, quantile, probs=c(0.025, 0.25, 0.5, 0.75, 0.975))
sapply(harm, quantile, probs=c(0.025, 0.25, 0.5, 0.75, 0.975))
@

<<blaplot,fig=TRUE,echo=FALSE>>=
qB <- sapply(benefit, quantile, probs=c(0.025,0.5,0.975))
qH <- sapply(harm, quantile, probs=c(0.025,0.5,0.975))
plot(qB[2,], qH[2,], pch=1:7, xlim=range(qB), ylim=range(qH), xlab="Benefit score (higher is better)", ylab="Harm score (higher is better)")
for (trt in treatments) {
	arrows(x0=qB[1,], y0=qH[2,], x1=qB[3,], y1=qH[2,], code=3, angle=90, length=0.05, add=TRUE)
	arrows(x0=qB[2,], y0=qH[1,], x1=qB[2,], y1=qH[3,], code=3, angle=90, length=0.05, add=TRUE)
}
legend("topright", legend=treatments, pch=1:7)
@

\end{document}
